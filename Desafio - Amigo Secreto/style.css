/*
===================================================================================
üìã DOCUMENTA√á√ÉO DO PROCESSO DE CONSTRU√á√ÉO - AMIGO SECRETO CSS
===================================================================================

üéØ OBJETIVO: Criar uma interface moderna com design glassmorphism para aplica√ß√£o 
   de sorteio de amigo secreto, evoluindo de um layout simples para um design 
   premium com efeitos visuais avan√ßados.

üìà PROCESSO DE DESENVOLVIMENTO (PASSO A PASSO):

1Ô∏è‚É£ FASE INICIAL - CORRE√á√ÉO DE LAYOUT
   ‚úÖ Problema: T√≠tulo n√£o estava centralizado e imagem mal posicionada
   ‚úÖ Solu√ß√£o: Implementado flexbox com justify-content: space-between
   ‚úÖ Resultado: Layout responsivo com t√≠tulo √† esquerda e imagem √† direita

2Ô∏è‚É£ FASE EST√âTICA - FONTES TEM√ÅTICAS  
   ‚úÖ Problema: Fonte padr√£o n√£o tinha personalidade
   ‚úÖ Solu√ß√£o: Adicionadas fontes gaming (Press Start 2P, Orbitron) via Google Fonts
   ‚úÖ Resultado: Visual retr√¥/gaming que combina com o tema l√∫dico

3Ô∏è‚É£ FASE VISUAL - ANIMA√á√ïES COLORIDAS
   ‚úÖ Problema: T√≠tulo est√°tico e sem destaque
   ‚úÖ Solu√ß√£o: Gradiente linear animado com background-clip: text
   ‚úÖ Resultado: T√≠tulo com cores que se movem dinamicamente

4Ô∏è‚É£ FASE MODERNIZA√á√ÉO - DESIGN GLASSMORPHISM
   ‚úÖ Problema: Interface datada e sem profundidade visual
   ‚úÖ Solu√ß√£o: Implementado backdrop-filter, rgba backgrounds, m√∫ltiplas sombras
   ‚úÖ Resultado: Design moderno com efeito de vidro fosco

5Ô∏è‚É£ FASE INTERATIVIDADE - MICRO-ANIMA√á√ïES
   ‚úÖ Problema: Elementos est√°ticos sem feedback visual
   ‚úÖ Solu√ß√£o: Hover effects, transforma√ß√µes, anima√ß√µes de entrada
   ‚úÖ Resultado: Interface responsiva com feedback visual em tempo real

6Ô∏è‚É£ FASE RESPONSIVIDADE - ADAPTA√á√ÉO UNIVERSAL
   ‚úÖ Problema: Layout quebrava em diferentes tamanhos de tela
   ‚úÖ Solu√ß√£o: Media queries progressivas de 480px at√© 1501px+
   ‚úÖ Resultado: Design funcional em qualquer dispositivo

7Ô∏è‚É£ FASE DOCUMENTA√á√ÉO - COMENT√ÅRIOS EDUCATIVOS
   ‚úÖ Problema: C√≥digo sem explica√ß√µes para aprendizado
   ‚úÖ Solu√ß√£o: Coment√°rios detalhados em cada propriedade CSS
   ‚úÖ Resultado: C√≥digo autodocumentado para fins educativos

üõ†Ô∏è T√âCNICAS UTILIZADAS:
   ‚Ä¢ Flexbox para layouts responsivos
   ‚Ä¢ CSS Grid para organiza√ß√£o de listas
   ‚Ä¢ Gradientes lineares e radiais animados
   ‚Ä¢ Pseudo-elementos para efeitos visuais
   ‚Ä¢ Backdrop-filter para glassmorphism
   ‚Ä¢ Keyframes para anima√ß√µes customizadas
   ‚Ä¢ Media queries para responsividade
   ‚Ä¢ Transform e transition para interatividade

üé® PALETA DE CORES:
   ‚Ä¢ Azul (#667eea) - cor prim√°ria
   ‚Ä¢ Roxo (#764ba2) - cor secund√°ria  
   ‚Ä¢ Rosa (#f093fb, #f5576c) - bot√µes de a√ß√£o
   ‚Ä¢ Ciano (#4facfe, #00f2fe) - bot√£o limpar
   ‚Ä¢ Gradiente multicolor para t√≠tulo animado

üí° FILOSOFIA DE DESIGN:
   ‚Ä¢ Mobile-first approach
   ‚Ä¢ Acessibilidade visual (contrastes adequados)
   ‚Ä¢ Feedback visual imediato
   ‚Ä¢ Consist√™ncia em espa√ßamentos e propor√ß√µes
   ‚Ä¢ Hierarquia visual clara

üìö GLOSS√ÅRIO EDUCATIVO:

üîπ GLASSMORPHISM: Estilo de design que simula vidro fosco usando:
   - backdrop-filter: blur() = desfoque no fundo
   - background: rgba() = transpar√™ncia controlada
   - border: rgba() = bordas semi-transparentes
   - box-shadow = sombras suaves para profundidade

üîπ PSEUDO-ELEMENTOS (::before, ::after):
   - Elementos virtuais criados via CSS (n√£o existem no HTML)
   - Sempre precisam de content: "" para existir
   - √öteis para efeitos decorativos sem poluir HTML

üîπ PSEUDO-CLASSES (:hover, :focus, :active):
   - Estados especiais de elementos (n√£o criam elementos novos)
   - Respondem a intera√ß√µes do usu√°rio
   - Fundamentais para feedback visual

üîπ FLEXBOX vs GRID:
   - Flexbox = layout unidimensional (linha OU coluna)
   - Grid = layout bidimensional (linhas E colunas)
   - Use flexbox para alinhar, grid para estruturar

üîπ UNIDADES CSS:
   - px = pixels absolutos (tamanho fixo)
   - % = porcentagem do elemento pai
   - vh/vw = porcentagem da viewport (tela)
   - rem = relativo ao font-size raiz
   - em = relativo ao font-size do elemento

üîπ Z-INDEX: Controla sobreposi√ß√£o de elementos
   - Valores maiores ficam "na frente"
   - S√≥ funciona com position: relative/absolute/fixed
   - Use valores espa√ßados (10, 20, 30) para facilitar inser√ß√µes

üí° DICAS DE BOAS PR√ÅTICAS:

‚úÖ ORGANIZA√á√ÉO:
   ‚Ä¢ Agrupe CSS por funcionalidade (reset, layout, componentes)
   ‚Ä¢ Use coment√°rios para separar se√ß√µes
   ‚Ä¢ Mantenha ordem l√≥gica: posicionamento ‚Üí dimens√µes ‚Üí visual ‚Üí anima√ß√µes

‚úÖ PERFORMANCE:
   ‚Ä¢ Prefira transforms a alterar propriedades de layout
   ‚Ä¢ Use will-change para otimizar anima√ß√µes pesadas
   ‚Ä¢ Minimize repintura com transform e opacity

‚úÖ RESPONSIVIDADE:
   ‚Ä¢ Mobile-first: comece com mobile, depois desktop
   ‚Ä¢ Use em/rem para textos, px para detalhes
   ‚Ä¢ Teste em dispositivos reais, n√£o s√≥ no navegador

‚úÖ ACESSIBILIDADE:
   ‚Ä¢ Mantenha contraste m√≠nimo 4.5:1 para textos
   ‚Ä¢ Use focus vis√≠vel para navega√ß√£o por teclado
   ‚Ä¢ N√£o dependa apenas de cor para transmitir informa√ß√£o

üé® SISTEMA DE CORES EXPLICADO:

üìä Formatos de cor utilizados:
   ‚Ä¢ HEX: #667eea (hexadecimal - formato compacto)
   ‚Ä¢ RGBA: rgba(255, 255, 255, 0.9) (red, green, blue, alpha)
   ‚Ä¢ HSL: hsl(240, 75%, 65%) (hue, saturation, lightness)

üåà Paleta harmoniosa escolhida:
   ‚Ä¢ #667eea (azul) + #764ba2 (roxo) = complementares an√°logas
   ‚Ä¢ #f093fb (rosa) + #f5576c (coral) = tons quentes vibrantes  
   ‚Ä¢ #4facfe (ciano) + #00f2fe (azul claro) = tons frios suaves

‚öñÔ∏è Transpar√™ncias estrat√©gicas:
   ‚Ä¢ rgba(255, 255, 255, 0.95) = branco 95% (container principal)
   ‚Ä¢ rgba(255, 255, 255, 0.9) = branco 90% (elementos internos)
   ‚Ä¢ rgba(0, 0, 0, 0.1) = preto 10% (sombras sutis)
   ‚Ä¢ rgba(0, 0, 0, 0.3) = preto 30% (sombras pronunciadas)

===================================================================================
*/

/* ===== VARI√ÅVEIS CSS (CSS CUSTOM PROPERTIES) ===== */
/*
üé® ALTERNATIVA MODERNA: Usando CSS Custom Properties

:root {
  --cor-primaria: #667eea;
  --cor-secundaria: #764ba2;
  --cor-rosa: #f093fb;
  --cor-coral: #f5576c;
  --cor-ciano: #4facfe;
  --cor-azul-claro: #00f2fe;
  
  --branco-95: rgba(255, 255, 255, 0.95);
  --branco-90: rgba(255, 255, 255, 0.9);
  --preto-10: rgba(0, 0, 0, 0.1);
  --preto-30: rgba(0, 0, 0, 0.3);
  
  --border-radius-pequeno: 15px;
  --border-radius-medio: 20px;
  --border-radius-grande: 25px;
  
  --sombra-suave: 0 8px 25px var(--preto-10);
  --sombra-pronunciada: 0 15px 40px var(--preto-30);
  
  --transicao-padrao: all 0.3s ease;
  --transicao-suave: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

üí° VANTAGENS DAS VARI√ÅVEIS CSS:
   ‚úÖ F√°cil manuten√ß√£o (muda em um lugar, afeta tudo)
   ‚úÖ Consist√™ncia visual autom√°tica
   ‚úÖ Tema din√¢mico (dark/light mode)
   ‚úÖ Melhor legibilidade do c√≥digo
   ‚úÖ Compatibilidade nativa (sem preprocessador)

üîß COMO USAR:
   background: var(--cor-primaria);
   border-radius: var(--border-radius-medio);
   transition: var(--transicao-padrao);
*/

/* ===== RESET E BASE ===== */
* {
  box-sizing: border-box; /* Inclui padding e border no c√°lculo da largura total dos elementos */
}

body {
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, Arial, sans-serif; /* Define hierarquia de fontes (primeira dispon√≠vel ser√° usada) */
  background: linear-gradient(
    135deg,
    #667eea 0%,
    #764ba2 100%
  ); /* Gradiente diagonal de azul para roxo */
  background-attachment: fixed; /* Fundo fixo quando a p√°gina rola */
  margin: 0; /* Remove margens padr√£o do navegador */
  padding: 20px; /* Espa√ßamento interno de 20px em todos os lados */
  min-height: 100vh; /* Altura m√≠nima igual √† altura da viewport (tela) */
  position: relative; /* Permite posicionamento de elementos filhos absolutos */
  overflow-x: hidden; /* Esconde scroll horizontal se houver */
}

body::before {
  /* PSEUDO-ELEMENTO: cria elemento virtual ANTES do conte√∫do do body */
  content: ""; /* Cria um pseudo-elemento vazio */
  position: fixed; /* Posi√ß√£o fixa na tela (n√£o rola) */
  top: 0; /* Posiciona no topo */
  left: 0; /* Posiciona na esquerda */
  right: 0; /* Estende at√© a direita */
  bottom: 0; /* Estende at√© embaixo */
  background: radial-gradient(
      /* Gradiente radial (circular) */ circle at 20% 80%,
      /* C√≠rculo posicionado em 20% horizontal, 80% vertical */
        rgba(120, 200, 255, 0.2) 0%,
      /* Azul claro semi-transparente no centro */ transparent 50%
        /* Transparente a partir de 50% do raio */
    ),
    radial-gradient(
      /* Segundo gradiente radial */ circle at 80% 20%,
      /* C√≠rculo no canto superior direito */ rgba(255, 120, 200, 0.2) 0%,
      /* Rosa semi-transparente */ transparent 50%
    ),
    radial-gradient(
      /* Terceiro gradiente radial */ circle at 40% 40%,
      /* C√≠rculo no centro-esquerda */ rgba(120, 255, 180, 0.1) 0%,
      /* Verde claro muito transparente */ transparent 50%
    );
  pointer-events: none; /* Elemento n√£o interfere com cliques do mouse */
  z-index: -1; /* Coloca atr√°s de todos os outros elementos */
}

/* ===== CONTAINER PRINCIPAL ===== */
/*
ü™ü EFEITO GLASSMORPHISM EXPLICADO:

O glassmorphism simula vidro fosco moderno atrav√©s de 4 propriedades principais:

1Ô∏è‚É£ TRANSPAR√äNCIA: background: rgba(255, 255, 255, 0.95)
   ‚Ä¢ rgba permite controlar a opacidade (95% opaco, 5% transparente)
   ‚Ä¢ Cria o efeito de "ver atrav√©s" do elemento

2Ô∏è‚É£ DESFOQUE: backdrop-filter: blur(20px)
   ‚Ä¢ Desfoca tudo que est√° ATR√ÅS do elemento
   ‚Ä¢ Simula o efeito de vidro fosco
   ‚Ä¢ Valor maior = mais desfoque

3Ô∏è‚É£ BORDAS SUAVES: border-radius: 25px
   ‚Ä¢ Bordas arredondadas s√£o essenciais para o estilo moderno
   ‚Ä¢ Evita cantos vivos que quebram a ilus√£o de vidro

4Ô∏è‚É£ SOMBRAS SUTIS: box-shadow com baixa opacidade
   ‚Ä¢ Cria profundidade sem exagero
   ‚Ä¢ Simula a sombra que um vidro real faria

üí° DICA: Sempre combine essas 4 propriedades para glassmorphism eficaz!
*/

.container {
  max-width: 1000px; /* Largura m√°xima de 1000px (n√£o cresce al√©m disso) */
  margin: 0 auto; /* Centraliza horizontalmente (0 top/bottom, auto left/right) */
  background: rgba(255, 255, 255, 0.95); /* Fundo branco com 95% de opacidade */
  backdrop-filter: blur(20px); /* Efeito de desfoque no que est√° atr√°s */
  border-radius: 25px; /* Bordas arredondadas de 25px */
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1); /* Sombra: 0px horizontal, 20px vertical, 40px blur, preto 10% */
  padding: 30px; /* Espa√ßamento interno de 30px */
  border: 1px solid rgba(255, 255, 255, 0.2); /* Borda branca semi-transparente */
}

/* ===== HEADER/T√çTULO ===== */
#parteSuperiorTitulo {
  display: flex; /* Layout flex√≠vel (elementos lado a lado) */
  align-items: center; /* Alinha itens verticalmente no centro */
  justify-content: space-between; /* Distribui espa√ßo: t√≠tulo √† esquerda, imagem √† direita */
  margin: -30px -30px 40px -30px; /* Margem: -30px top/left/right, 40px bottom (sai das bordas do container) */
  background: linear-gradient(
    135deg,
    #667eea 0%,
    #764ba2 100%
  ); /* Gradiente diagonal azul para roxo */
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2),
    /* Sombra externa */ inset 0 1px 0 rgba(255, 255, 255, 0.1); /* Sombra interna (highlight no topo) */
  padding: 30px 25px; /* Espa√ßamento interno: 30px top/bottom, 25px left/right */
  flex-wrap: wrap; /* Permite quebra de linha em telas pequenas */
  border-radius: 25px 25px 0 0; /* Bordas arredondadas apenas no topo */
  position: relative; /* Permite posicionamento de pseudo-elementos */
  overflow: hidden; /* Esconde conte√∫do que sai das bordas */
  gap: 20px; /* Espa√ßo de 20px entre os itens flex */
}

#parteSuperiorTitulo::before {
  /* PSEUDO-ELEMENTO: cria elemento virtual ANTES do conte√∫do do cabe√ßalho */
  content: ""; /* Cria pseudo-elemento vazio */
  position: absolute; /* Posi√ß√£o absoluta dentro do elemento pai */
  top: 0; /* Colado no topo */
  left: 0; /* Colado na esquerda */
  right: 0; /* Estende at√© a direita */
  bottom: 0; /* Estende at√© embaixo */
  background: linear-gradient(
    /* Gradiente linear diagonal */ 45deg,
    /* √Çngulo de 45 graus */ transparent 30%,
    /* Transparente at√© 30% */ rgba(255, 255, 255, 0.1) 50%,
    /* Branco semi-transparente no meio */ transparent 70%
      /* Transparente depois de 70% */
  );
  animation: shimmer 3s ease-in-out infinite; /* Anima√ß√£o shimmer de 3s, suave, infinita */
}

.titulo-centralizado {
  flex: 1; /* Ocupa todo o espa√ßo dispon√≠vel (cresce para preencher) */
  display: flex; /* Layout flex√≠vel */
  justify-content: center; /* Centraliza conte√∫do horizontalmente */
  align-items: center; /* Centraliza conte√∫do verticalmente */
  min-width: 250px; /* Largura m√≠nima de 250px */
  max-width: 65%; /* Largura m√°xima de 65% do container */
  position: relative; /* Permite posicionamento de elementos filhos */
  z-index: 2; /* Fica acima do pseudo-elemento ::before */
}

h1 {
  margin: 0; /* Remove margem padr√£o */
  padding: 0; /* Remove padding padr√£o */
  font-size: 30px; /* Tamanho da fonte em pixels */
  font-style: italic; /* Texto em it√°lico */
  font-family: "Press Start 2P", "Orbitron", monospace, fantasy, cursive,
    /* Hierarquia de fontes: primeira dispon√≠vel ser√° usada */ sans-serif; /* Fonte sem serifa como √∫ltimo recurso */
  text-align: center; /* Alinha texto no centro */
  letter-spacing: 1px; /* Espa√ßo de 1px entre as letras */
  background: linear-gradient(
    /* Gradiente linear para o texto */ 45deg,
    /* √Çngulo diagonal de 45 graus */ #ff6b6b,
    /* Vermelho coral */ #4ecdc4,
    /* Turquesa */ #45b7d1,
    /* Azul claro */ #96ceb4,
    /* Verde menta */ #ffeaa7,
    /* Amarelo suave */ #dda0dd,
    /* Lil√°s */ #ff6b6b /* Volta ao vermelho coral (loop) */
  );
  background-size: 400% 400%; /* Faz o gradiente 4x maior para permitir anima√ß√£o */
  -webkit-background-clip: text; /* Aplica gradiente apenas no texto (Webkit) */
  -webkit-text-fill-color: transparent; /* Torna o texto transparente para mostrar o gradiente */
  background-clip: text; /* Vers√£o padr√£o da propriedade acima */
  animation: gradient 4s ease infinite; /* Anima√ß√£o do gradiente: 4s, suave, infinita */
  position: relative; /* Permite posicionamento de pseudo-elementos */
  filter: drop-shadow(
    0 0 20px rgba(255, 255, 255, 0.3)
  ); /* Sombra externa branca suave */
  word-wrap: break-word; /* Quebra palavras longas se necess√°rio */
  line-height: 1.1; /* Altura da linha 1.1x o tamanho da fonte */
}

#parteSuperiorTitulo img {
  width: 150px; /* Largura fixa da imagem */
  border-radius: 15px; /* Bordas arredondadas */
  flex-shrink: 0; /* Impede que a imagem diminua no flexbox */
  margin-left: 15px; /* Margem √† esquerda para espa√ßamento */
}

/* ===== ANIMA√á√ïES APRIMORADAS ===== */
/*
üé¨ EXPLICA√á√ÉO DAS ANIMA√á√ïES:

üìù Como funcionam os @keyframes:
   ‚Ä¢ 0% = estado inicial da anima√ß√£o
   ‚Ä¢ 50% = estado no meio da anima√ß√£o  
   ‚Ä¢ 100% = estado final da anima√ß√£o
   ‚Ä¢ Pode usar from (0%) e to (100%) tamb√©m

‚ö° Propriedades anim√°veis com boa performance:
   ‚úÖ transform (translate, scale, rotate)
   ‚úÖ opacity (transpar√™ncia)
   ‚úÖ filter (blur, brightness)
   ‚ùå width, height, top, left (causam reflow)

üîÑ Tipos de timing-function:
   ‚Ä¢ ease = lento ‚Üí r√°pido ‚Üí lento
   ‚Ä¢ linear = velocidade constante
   ‚Ä¢ ease-in = come√ßa lento
   ‚Ä¢ ease-out = termina lento
   ‚Ä¢ cubic-bezier() = curva personalizada
*/

@keyframes gradient {
  /* ANIMA√á√ÉO: move gradiente do t√≠tulo */
  0%,
  100% {
    background-position: 0% 50%; /* Posi√ß√£o inicial e final do gradiente */
  }
  50% {
    background-position: 100% 50%; /* Posi√ß√£o no meio da anima√ß√£o */
  }
}

@keyframes glow {
  0% {
    text-shadow: 0 0 20px rgba(255, 255, 255, 0.3); /* Brilho inicial */
  }
  100% {
    text-shadow: 0 0 40px rgba(255, 255, 255, 0.7); /* Brilho m√°ximo no final */
  }
}

@keyframes shimmer {
  0% {
    transform: translateX(-100%); /* Inicia fora da tela √† esquerda */
  }
  100% {
    transform: translateX(100%); /* Termina fora da tela √† direita */
  }
}

@keyframes float {
  0%,
  100% {
    transform: translateY(0px); /* Posi√ß√£o inicial e final */
  }
  50% {
    transform: translateY(-10px); /* Posi√ß√£o no meio (flutuando) */
  }
}

/* ===== FORMUL√ÅRIO MODERNO ===== */
#nomeInput {
  width: 100%; /* Largura total do container */
  padding: 18px 25px; /* Espa√ßamento interno: 18px vertical, 25px horizontal */
  margin: 25px 0; /* Margem: 25px vertical, 0 horizontal */
  border: none; /* Remove borda padr√£o */
  border-radius: 50px; /* Bordas arredondadas */
  text-align: center; /* Centraliza o texto */
  font-size: 18px; /* Tamanho da fonte */
  font-weight: 500; /* Peso da fonte (semi-negrito) */
  box-sizing: border-box; /* Inclui padding e border no c√°lculo da largura */
  background: rgba(255, 255, 255, 0.9); /* Fundo branco com 90% de opacidade */
  backdrop-filter: blur(10px); /* Desfoque no fundo */
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1),
    /* Sombra externa suave */ inset 0 2px 0 rgba(255, 255, 255, 0.3); /* Sombra interna branca no topo */
  transition: all 0.3s ease; /* Transi√ß√£o suave para todas as propriedades */
  outline: none; /* Remove outline padr√£o no foco */
}

#nomeInput:focus {
  /* PSEUDO-CLASSE: estilo aplicado quando o campo est√° FOCADO (clicado) */
  transform: translateY(-2px); /* Move 2px para cima quando focado */
  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15),
    /* Sombra maior e mais intensa */ 0 0 0 3px rgba(102, 126, 234, 0.3); /* Anel de foco azul */
  background: rgba(255, 255, 255, 1); /* Fundo totalmente opaco quando focado */
}

#nomeInput::placeholder {
  /* PSEUDO-ELEMENTO: estiliza o texto de EXEMPLO dentro do campo */
  color: #999; /* Cor cinza para o texto placeholder */
  font-style: italic; /* Placeholder em it√°lico */
}

/* ===== BOT√ïES PREMIUM ===== */
.botoes-container {
  display: flex; /* Layout flex√≠vel */
  justify-content: center; /* Centraliza os bot√µes horizontalmente */
  gap: 20px; /* Espa√ßo de 20px entre os bot√µes */
  margin: 30px 0; /* Margem: 30px vertical, 0 horizontal */
  flex-wrap: wrap; /* Permite quebra de linha em telas pequenas */
}

.botao {
  padding: 15px 30px; /* Espa√ßamento interno: 15px vertical, 30px horizontal */
  border: none; /* Remove borda padr√£o */
  border-radius: 50px; /* Bordas arredondadas */
  color: white; /* Cor do texto branca */
  font-size: 16px; /* Tamanho da fonte */
  font-weight: 600; /* Peso da fonte (semi-negrito) */
  cursor: pointer; /* Cursor de ponteiro ao passar o mouse */
  text-align: center; /* Centraliza o texto */
  min-width: 140px; /* Largura m√≠nima */
  position: relative; /* Permite posicionamento de pseudo-elementos */
  overflow: hidden; /* Esconde conte√∫do que sai da √°rea do bot√£o */
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1); /* Transi√ß√£o suave customizada */
  text-transform: uppercase; /* Texto em mai√∫sculas */
  letter-spacing: 1px; /* Espa√ßamento entre letras */
  backdrop-filter: blur(10px); /* Desfoque no fundo */
}

.botao::before {
  /* PSEUDO-ELEMENTO: cria elemento virtual ANTES do conte√∫do do bot√£o (efeito brilho) */
  content: ""; /* Pseudo-elemento vazio */
  position: absolute; /* Posicionamento absoluto dentro do bot√£o */
  top: 0; /* Alinha ao topo */
  left: -100%; /* Inicia fora da tela √† esquerda */
  width: 100%; /* Largura total do bot√£o */
  height: 100%; /* Altura total do bot√£o */
  background: linear-gradient(
    /* Gradiente para efeito de brilho */ 90deg,
    /* Dire√ß√£o horizontal */ transparent,
    /* Transparente no in√≠cio */ rgba(255, 255, 255, 0.3),
    /* Branco semi-transparente no meio */ transparent
      /* Transparente no final */
  );
  transition: left 0.5s; /* Transi√ß√£o da propriedade left */
}

.botao:hover::before {
  /* PSEUDO-CLASSE + PSEUDO-ELEMENTO: move o brilho quando o mouse PASSA SOBRE o bot√£o */
  left: 100%; /* Move o brilho para fora da tela √† direita */
}

.botao:hover {
  /* PSEUDO-CLASSE: estilo aplicado quando o mouse PASSA SOBRE o bot√£o */
  transform: translateY(-3px) scale(1.05); /* Move para cima e aumenta 5% */
  box-shadow: 0 15px 35px rgba(0, 0, 0, 0.25); /* Sombra mais pronunciada */
  animation: float 1s ease-in-out infinite; /* Anima√ß√£o de flutua√ß√£o */
}

.botao:active {
  /* PSEUDO-CLASSE: estilo aplicado quando o bot√£o est√° sendo PRESSIONADO */
  transform: translateY(-1px) scale(1.02); /* Efeito quando pressionado */
}

.botao:disabled {
  /* PSEUDO-CLASSE: estilo aplicado quando o bot√£o est√° DESABILITADO */
  cursor: not-allowed; /* Cursor indicando que n√£o pode clicar */
  opacity: 0.5; /* Transpar√™ncia de 50% */
  transform: none !important; /* Remove transforma√ß√µes */
  animation: none !important; /* Remove anima√ß√µes */
  background: linear-gradient(135deg, #999, #666) !important; /* Fundo cinza */
}

#adicionarBtn {
  background: linear-gradient(
    135deg,
    #667eea 0%,
    #764ba2 100%
  ); /* Gradiente azul-roxo */
  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4); /* Sombra azul */
}

#sortearBtn {
  background: linear-gradient(
    135deg,
    #f093fb 0%,
    #f5576c 100%
  ); /* Gradiente rosa-vermelho */
  box-shadow: 0 8px 25px rgba(245, 87, 108, 0.4); /* Sombra rosa */
}

#limparBtn {
  background: linear-gradient(
    135deg,
    #4facfe 0%,
    #00f2fe 100%
  ); /* Gradiente azul-ciano */
  box-shadow: 0 8px 25px rgba(79, 172, 254, 0.4); /* Sombra azul */
}

/* ===== LISTA DE NOMES ELEGANTE ===== */
#listaNomes {
  margin-top: 30px; /* Margem superior */
  list-style: none; /* Remove marcadores da lista */
  padding: 0; /* Remove padding padr√£o */
  display: grid; /* Layout em grade */
  gap: 15px; /* Espa√ßo entre itens da grade */
}

#listaNomes li {
  font-size: 18px; /* Tamanho da fonte */
  font-weight: 500; /* Peso da fonte (semi-negrito) */
  background: rgba(255, 255, 255, 0.9); /* Fundo branco semi-transparente */
  backdrop-filter: blur(10px); /* Desfoque no fundo */
  padding: 20px; /* Espa√ßamento interno */
  border-radius: 20px; /* Bordas arredondadas */
  text-align: center; /* Centraliza o texto */
  position: relative; /* Permite pseudo-elementos */
  overflow: hidden; /* Esconde conte√∫do extra */
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1); /* Transi√ß√£o suave customizada */
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1); /* Sombra suave */
  border: 1px solid rgba(255, 255, 255, 0.3); /* Borda branca semi-transparente */
}

#listaNomes li::before {
  /* PSEUDO-ELEMENTO: cria elemento virtual ANTES de cada item da lista (barra colorida) */
  content: ""; /* Pseudo-elemento vazio */
  position: absolute; /* Posicionamento absoluto */
  top: 0; /* Alinha ao topo */
  left: 0; /* Alinha √† esquerda */
  right: 0; /* Alinha √† direita */
  height: 3px; /* Altura de 3px */
  background: linear-gradient(
    90deg,
    #667eea,
    #764ba2,
    #f093fb,
    #f5576c
  ); /* Gradiente colorido */
  background-size: 300% 100%; /* Tamanho do gradiente para anima√ß√£o */
  animation: gradient 3s ease infinite; /* Anima√ß√£o do gradiente */
}

#listaNomes li:hover {
  /* PSEUDO-CLASSE: estilo aplicado quando o mouse PASSA SOBRE um item da lista */
  transform: translateY(-5px) scale(1.02); /* Move para cima e aumenta ligeiramente */
  box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15); /* Sombra mais pronunciada */
  background: rgba(255, 255, 255, 1); /* Fundo totalmente opaco */
}

#listaNomes li:nth-child(even) {
  /* PSEUDO-CLASSE: seleciona itens PARES (2¬∫, 4¬∫, 6¬∫...) da lista */
  animation-delay: 0.1s; /* Atraso na anima√ß√£o para itens pares */
}

#listaNomes li:nth-child(odd) {
  /* PSEUDO-CLASSE: seleciona itens √çMPARES (1¬∫, 3¬∫, 5¬∫...) da lista */
  animation-delay: 0.2s; /* Atraso na anima√ß√£o para itens √≠mpares */
}

/* ===== RESULTADO DO SORTEIO ===== */
#resultado {
  margin-top: 30px; /* Margem superior */
  padding: 20px; /* Espa√ßamento interno */
  text-align: center; /* Centraliza o texto */
  font-size: 24px; /* Tamanho da fonte */
  font-weight: bold; /* Texto em negrito */
  min-height: 60px; /* Altura m√≠nima */
  border-radius: 20px; /* Bordas arredondadas */
  transition: all 0.5s ease; /* Transi√ß√£o suave para todas as propriedades */
  animation: resultadoEntrada 0.8s ease-out; /* Anima√ß√£o de entrada */
}

#resultado:not(:empty) {
  /* PSEUDO-CLASSE: aplica estilo quando o resultado N√ÉO est√° vazio (tem conte√∫do) */
  background: linear-gradient(
    135deg,
    #ff6b6b,
    #4ecdc4,
    #45b7d1
  ); /* Gradiente colorido quando h√° conte√∫do */
  background-size: 200% 200%; /* Tamanho do gradiente para anima√ß√£o */
  color: white; /* Cor do texto branca */
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5); /* Sombra do texto */
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3); /* Sombra da caixa */
  border: 3px solid #fff; /* Borda branca */
  animation: resultadoEntrada 0.8s ease-out,
    /* Anima√ß√£o de entrada */ gradientePulse 2s ease-in-out infinite; /* Anima√ß√£o de pulsa√ß√£o */
}

#resultado:empty {
  /* PSEUDO-CLASSE: aplica estilo quando o resultado est√° VAZIO (sem conte√∫do) */
  background: transparent; /* Fundo transparente quando vazio */
  box-shadow: none; /* Remove sombra quando vazio */
  border: none; /* Remove borda quando vazio */
}

/* ===== ANIMA√á√ïES DO RESULTADO ===== */
@keyframes resultadoEntrada {
  0% {
    opacity: 0; /* Inicia invis√≠vel */
    transform: scale(0.8) translateY(20px); /* Inicia menor e mais abaixo */
  }
  50% {
    transform: scale(1.05); /* Aumenta ligeiramente no meio */
  }
  100% {
    opacity: 1; /* Termina vis√≠vel */
    transform: scale(1) translateY(0); /* Tamanho e posi√ß√£o normais */
  }
}

@keyframes gradientePulse {
  0%,
  100% {
    background-position: 0% 50%; /* Posi√ß√£o inicial e final do gradiente */
    transform: scale(1); /* Tamanho normal */
  }
  50% {
    background-position: 100% 50%; /* Posi√ß√£o no meio da anima√ß√£o */
    transform: scale(1.02); /* Aumenta 2% no meio */
  }
}

/* ===== IMAGENS GERAIS ===== */
#amigos {
  height: 200px; /* Altura fixa */
  width: 500px; /* Largura fixa */
  border-radius: 20px; /* Bordas arredondadas */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Sombra suave */
}

/* ===== RESPONSIVIDADE ===== */
/*
üì± ESTRAT√âGIA DE BREAKPOINTS EXPLICADA:

üéØ Filosofia Mobile-First:
   ‚Ä¢ CSS base = mobile (menor tela)
   ‚Ä¢ Media queries = desktop (telas maiores)
   ‚Ä¢ Vantagem: melhor performance em mobile

üìä Breakpoints escolhidos:
   ‚Ä¢ 480px = smartphones pequenos
   ‚Ä¢ 768px = tablets em modo retrato  
   ‚Ä¢ 1000px = tablets em modo paisagem
   ‚Ä¢ 1300px = desktops pequenos
   ‚Ä¢ 1500px+ = desktops grandes

üîß Ajustes por tamanho:
   ‚Ä¢ Fonte do t√≠tulo: 28px ‚Üí 80px (proporcional ao espa√ßo)
   ‚Ä¢ Layout: coluna (mobile) ‚Üí linha (desktop)
   ‚Ä¢ Espa√ßamentos: menores ‚Üí maiores
   ‚Ä¢ Imagens: 120px ‚Üí 260px

üí° REGRA DE OURO: Teste sempre em dispositivos reais!
*/

/* Mobile muito pequeno */
@media (max-width: 480px) {
  body {
    padding: 10px; /* Padding reduzido para mobile */
  }

  .container {
    padding: 20px; /* Padding interno reduzido */
    margin: 10px; /* Margem reduzida */
  }

  #parteSuperiorTitulo {
    flex-direction: column; /* Alinha verticalmente no mobile */
    gap: 15px; /* Espa√ßo menor entre elementos */
    margin: -20px -20px 20px -20px; /* Margem negativa para expandir */
    border-radius: 15px 15px 0 0; /* Bordas arredondadas apenas no topo */
  }

  .titulo-centralizado {
    min-width: auto; /* Remove largura m√≠nima no mobile */
  }

  #parteSuperiorTitulo img {
    width: 120px; /* Imagem menor no mobile */
    order: 2; /* Coloca imagem depois do t√≠tulo */
  }

  h1 {
    font-size: 28px !important; /* T√≠tulo menor no mobile */
    letter-spacing: 0.5px; /* Espa√ßamento menor entre letras */
    line-height: 1.2; /* Altura da linha reduzida */
  }

  .botoes-container {
    gap: 10px; /* Espa√ßo menor entre bot√µes */
    flex-direction: column; /* Bot√µes em coluna no mobile */
    align-items: center; /* Centraliza bot√µes */
  }

  .botao {
    min-width: 200px; /* Largura m√≠nima maior para mobile */
    padding: 12px 20px; /* Padding reduzido */
    font-size: 14px; /* Fonte menor */
  }

  #resultado {
    font-size: 18px; /* Fonte menor para resultado */
    padding: 15px; /* Padding reduzido */
    margin-top: 20px; /* Margem superior reduzida */
  }
}

/* Mobile */
@media (min-width: 481px) and (max-width: 768px) {
  #parteSuperiorTitulo {
    flex-direction: column; /* Layout vertical para tablets pequenos */
    gap: 20px; /* Espa√ßo entre elementos */
  }

  .titulo-centralizado {
    min-width: auto; /* Remove largura m√≠nima */
  }

  #parteSuperiorTitulo img {
    width: 150px; /* Tamanho da imagem para tablets */
    order: 2; /* Posiciona imagem ap√≥s o t√≠tulo */
  }

  h1 {
    font-size: 40px !important; /* T√≠tulo maior que mobile */
    line-height: 1.1; /* Altura da linha ajustada */
  }

  #resultado {
    font-size: 20px; /* Fonte do resultado para tablet */
    padding: 18px; /* Padding para tablet */
  }
}

/* Tablet pequeno */
@media (min-width: 769px) and (max-width: 1000px) {
  #parteSuperiorTitulo img {
    width: 180px; /* Imagem maior para tablets m√©dios */
  }
  h1 {
    font-size: 50px !important; /* T√≠tulo maior para tablets m√©dios */
  }
}

/* Desktop pequeno */
@media (min-width: 1001px) and (max-width: 1300px) {
  #parteSuperiorTitulo img {
    width: 200px; /* Imagem para desktop pequeno */
  }
  h1 {
    font-size: 60px !important; /* T√≠tulo para desktop pequeno */
  }
}

/* Desktop m√©dio */
@media (min-width: 1301px) and (max-width: 1500px) {
  #parteSuperiorTitulo img {
    width: 240px; /* Imagem maior para desktop m√©dio */
  }
  h1 {
    font-size: 70px !important; /* T√≠tulo maior para desktop m√©dio */
  }
}

/* Desktop grande */
@media (min-width: 1501px) {
  #parteSuperiorTitulo img {
    width: 260px; /* Imagem m√°xima para desktop grande */
  }
  h1 {
    font-size: 80px !important; /* T√≠tulo m√°ximo para desktop grande */
  }
}

/*
===================================================================================
ÔøΩ TROUBLESHOOTING E DEBUG - PROBLEMAS COMUNS E SOLU√á√ïES
===================================================================================

‚ùå PROBLEMA: "Meu glassmorphism n√£o aparece"
‚úÖ SOLU√á√ÉO: 
   ‚Ä¢ Verifique se backdrop-filter √© suportado: @supports (backdrop-filter: blur(1px))
   ‚Ä¢ Use -webkit-backdrop-filter para Safari
   ‚Ä¢ Certifique-se que h√° conte√∫do atr√°s para ser desfocado

‚ùå PROBLEMA: "Anima√ß√µes est√£o lentas/travando"
‚úÖ SOLU√á√ÉO:
   ‚Ä¢ Use transform/opacity em vez de width/height/top/left
   ‚Ä¢ Adicione will-change: transform nas anima√ß√µes pesadas
   ‚Ä¢ Evite animar muitos elementos simultaneamente

‚ùå PROBLEMA: "Layout quebra no mobile"
‚úÖ SOLU√á√ÉO:
   ‚Ä¢ Use overflow-x: hidden no body
   ‚Ä¢ Defina min-width/max-width apropriados
   ‚Ä¢ Teste com flex-wrap: wrap nos containers

‚ùå PROBLEMA: "Fontes n√£o carregam"
‚úÖ SOLU√á√ÉO:
   ‚Ä¢ Verifique conex√£o com Google Fonts
   ‚Ä¢ Defina font-display: swap para performance
   ‚Ä¢ Sempre tenha fallbacks: Arial, sans-serif

‚ùå PROBLEMA: "Cores do gradiente n√£o aparecem"
‚úÖ SOLU√á√ÉO:
   ‚Ä¢ Use -webkit-background-clip: text para compatibilidade
   ‚Ä¢ Defina -webkit-text-fill-color: transparent
   ‚Ä¢ Certifique-se que background-size est√° configurado

üõ†Ô∏è FERRAMENTAS DE DEBUG:
   ‚Ä¢ F12 DevTools ‚Üí Computed ‚Üí veja valores finais
   ‚Ä¢ Console ‚Üí getComputedStyle(element) ‚Üí valores JavaScript
   ‚Ä¢ Lighthouse ‚Üí performance e acessibilidade
   ‚Ä¢ Can I Use ‚Üí compatibilidade de propriedades

===================================================================================
ÔøΩüìö RECURSOS PARA CONTINUAR APRENDENDO
===================================================================================

üîó DOCUMENTA√á√ÉO OFICIAL:
   ‚Ä¢ MDN Web Docs: https://developer.mozilla.org/pt-BR/docs/Web/CSS
   ‚Ä¢ CSS Tricks: https://css-tricks.com/
   ‚Ä¢ W3Schools: https://www.w3schools.com/css/

üõ†Ô∏è FERRAMENTAS √öTEIS:
   ‚Ä¢ Can I Use: https://caniuse.com/ (compatibilidade de propriedades)
   ‚Ä¢ CSS Grid Generator: https://cssgrid-generator.netlify.app/
   ‚Ä¢ Flexbox Froggy: https://flexboxfroggy.com/ (jogo para aprender flexbox)
   ‚Ä¢ Grid Garden: https://cssgridgarden.com/ (jogo para aprender grid)

üé® INSPIRA√á√ÉO DE DESIGN:
   ‚Ä¢ Dribbble: https://dribbble.com/
   ‚Ä¢ Behance: https://www.behance.net/
   ‚Ä¢ UI Movement: https://uimovement.com/

üîç CONCEITOS PARA APROFUNDAR:
   ‚úÖ CSS Architecture (BEM, SMACSS, OOCSS)
   ‚úÖ CSS Preprocessing (Sass, Less)
   ‚úÖ CSS-in-JS (Styled Components, Emotion)
   ‚úÖ CSS Frameworks (Tailwind, Bootstrap)
   ‚úÖ CSS Custom Properties (Vari√°veis CSS)
   ‚úÖ CSS Container Queries
   ‚úÖ CSS Subgrid
   ‚úÖ CSS Houdini

üöÄ PR√ìXIMOS PASSOS SUGERIDOS:
   1. Experimente modificar as cores e anima√ß√µes
   2. Adicione novos efeitos hover nos elementos
   3. Implemente tema dark/light
   4. Otimize para melhor acessibilidade
   5. Adicione anima√ß√µes de micro-intera√ß√£o
   6. Experimente com CSS Grid Layout
   7. Implemente Progressive Enhancement

üéØ EXERC√çCIOS PR√ÅTICOS PARA FIXAR O APRENDIZADO:

üìù N√çVEL INICIANTE:
   ‚ñ° Mude as cores do gradiente do t√≠tulo
   ‚ñ° Altere o border-radius dos bot√µes
   ‚ñ° Troque as fontes por outras do Google Fonts
   ‚ñ° Modifique a velocidade das anima√ß√µes (duration)

üìù N√çVEL INTERMEDI√ÅRIO:
   ‚ñ° Crie um novo bot√£o com gradiente diferente
   ‚ñ° Adicione hover effect nos itens da lista
   ‚ñ° Implemente um loader animado
   ‚ñ° Crie uma vers√£o dark theme

üìù N√çVEL AVAN√áADO:
   ‚ñ° Converta todas as cores para CSS Custom Properties
   ‚ñ° Adicione anima√ß√µes de entrada com intersection observer
   ‚ñ° Implemente smooth scrolling entre se√ß√µes
   ‚ñ° Crie variantes de componentes usando data-attributes

üìù DESAFIOS EXTRAS:
   ‚ñ° Adicione suporte a high contrast mode
   ‚ñ° Implemente reduced motion para acessibilidade
   ‚ñ° Crie um sistema de grid personalizado
   ‚ñ° Adicione support para Right-to-Left (RTL)

üí° LEMBRE-SE:
   ‚Ä¢ A pr√°tica leva √† perfei√ß√£o
   ‚Ä¢ Comece simples, evolua gradualmente  
   ‚Ä¢ Sempre pense na experi√™ncia do usu√°rio
   ‚Ä¢ Teste em m√∫ltiplos dispositivos e navegadores
   ‚Ä¢ O c√≥digo limpo e bem documentado √© um investimento futuro

üíæ SNIPPETS DE C√ìDIGO ALTERNATIVOS √öTEIS:

üåô DARK THEME TOGGLE:
   @media (prefers-color-scheme: dark) {
     :root {
       --bg-color: #1a1a1a;
       --text-color: #ffffff;
       --container-bg: rgba(0, 0, 0, 0.8);
     }
   }

‚ö° PERFORMANCE OPTIMIZATION:
   .animacao-pesada {
     will-change: transform;
     transform: translateZ(0);
   }

   @media (prefers-reduced-motion: reduce) {
     * { animation: none !important; }
   }

üé® ALTERNATIVAS DE GRADIENTE:
   background: conic-gradient(from 0deg, #ff6b6b, #4ecdc4, #45b7d1, #ff6b6b);
   background: linear-gradient(45deg, #ff6b6b 0%, #4ecdc4 25%, #45b7d1 50%);

üîç CSS DEBUGGING:
   * { outline: 1px solid red !important; }
   .debug-grid { 
     background-image: linear-gradient(rgba(255,0,0,0.1) 1px, transparent 1px);
     background-size: 20px 20px;
   }

===================================================================================
*/
